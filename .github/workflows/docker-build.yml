name: Build Docker Images with Matrix Strategy

on:
  workflow_dispatch:
    inputs:
      tags:
        required: false
        type: string
        default: ''
        description: 'Tags'
      dry-run:
        required: true
        type: boolean
        default: false
        description: 'Dry run'
      path-to-chart:
        description: 'Path to chart'
        required: true
        default: './charts/qubership-logging-operator/Chart.yaml'

jobs:
  load_config:
    name: "Load Docker Configuration"
    runs-on: ubuntu-latest
    outputs:
      components: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Load Docker Configuration
        id: load_component
        shell: bash
        run: |
          verify=$(cat "$GITHUB_WORKSPACE/.github/docker-release-config.json" | jq '
            def verify_structure:
              .components as $components
              | .platforms as $platforms
              | ($components | type == "array")
              and (all($components[]; has("name") and has("file") and has("context")))
              and ($platforms | type == "string");
            verify_structure
            | if . then true else false end
          ')
          if [ "${verify}" == "true" ]; then
            echo "✅ $GITHUB_WORKSPACE/.github/docker-release-config.json file is valid"
            components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-release-config.json")
            platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-release-config.json")
          else
            echo "❗ $GITHUB_WORKSPACE/.github/docker-release-config.json file is invalid"
            echo "❗ $GITHUB_WORKSPACE/.github/docker-release-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "components=${components}" >> "$GITHUB_OUTPUT"
          echo "platforms=${platforms}" >> "$GITHUB_OUTPUT"

  build:
    name: "Build Docker Images"
    needs: load_config
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.load_config.outputs.components) }}
    steps:
      - name: Docker
        uses: nookyo/qubership-workflow-hub/actions/docker-build@main
        with:
          ref: ${{ github.ref }}
          artifact-id: my-artifact
          context: "git"
          dry-run: ${{ inputs.dry-run }}
          download-artifact: "false"
          component: ${{ toJson(matrix.component) }}
          platforms: ${{ needs.load_config.outputs.platforms }}
          tags: "latest, v1.0.0"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
