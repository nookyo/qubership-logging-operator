name: Dev Build
run-name: "Dev build repository: ${{ github.ref_name }} #${{ github.run_number }}"
on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:
    inputs:
      tags:
        required: false
        type: string
        default: ''
        description: 'Tags'
      dry-run:
        required: false
        type: boolean
        default: false
        description: 'Dry run'
permissions:
  contents: write
  pull-requests: write
  statuses: write
  actions: write
jobs:
  load-docker-build-components:
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Load Docker Configuration
        id: load_component
        run: |
          verify=$(cat "$GITHUB_WORKSPACE/.github/docker-dev-config.json" | jq '
          def verify_structure:
          .components as $components
          | .platforms as $platforms
          | ($components | type == "array")
          and (all($components[]; has("name") and has("file") and has("context")))
          and ($platforms | type == "string");
          verify_structure
          | if . then true else false end
          ')
          if [ ${verify} == 'true' ]; then
            echo "✅ $GITHUB_WORKSPACE/.github/docker-dev-onfig.json file is valid"
            components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
            platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-dev-config.json")
          else
            echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid"
            echo "❗ $GITHUB_WORKSPACE/.github/docker-dev-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          echo "components=${components}" >> $GITHUB_OUTPUT
          echo "platforms=${platforms}" >> $GITHUB_OUTPUT

  perform-version:
    runs-on: ubuntu-latest
    needs: [load-docker-build-components]
    outputs:
      metadata: "${{ steps.metadata.outputs.result }}"
      tags: "${{ steps.prepare_tags.outputs.tags }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create name
        uses: nookyo/qubership-workflow-hub/actions/metadata-action@main
        id: metadata
        with:
          configuration-path: .github/dev-metadata-config.yml
          short-sha: 11

      - name: Echo metadata
        run: echo "Metadata result ${{ steps.metadata.outputs.result }}" >> $GITHUB_STEP_SUMMARY

      - name: Prepare tags
        id: prepare_tags
        run: |
          BASE_TAG="${{ steps.metadata.outputs.result }}"
          EXTRA_TAG="${{ github.event.inputs.tags }}"
          if [ -n "$EXTRA_TAG" ]; then
            TAGS="${BASE_TAG}, ${EXTRA_TAG}"
          else
            TAGS="${BASE_TAG}"
          fi
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "tags: ${TAGS}" >> $GITHUB_STEP_SUMMARY
          echo "github.head_ref : ${github.head_ref}"

  docker-build:
    uses: nookyo/qubership-workflow-hub/.github/workflows/docker-publish.yml@main
    needs: [perform-version]
    with:
      ref: ${{ github.event_name == 'pull_request' && github.head_ref || github.ref }}
      dry-run: true
      tags: ${{ needs.perform-version.outputs.tags }}
      download-artifact: false
      component: ${{ needs.load-docker-build-components.outputs.component }}
      platforms: ${{ needs.load-docker-build-components.outputs.platforms }}