{{- if .Capabilities.APIVersions.Has "policy/v1beta1" }}
{{- if .Values.createClusterAdminEntities }}
{{- if .Values.graylog.install }}
{{- if .Values.graylog.securityResources.install }}
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: {{ .Values.graylog.securityResources.name }}
  annotations:
    kubernetes.io/description: {{ .Values.graylog.securityResources.name }} psp is used for the graylog-service
  {{- if .Values.graylog.annotations }}
    {{- toYaml .Values.graylog.annotations | nindent 4 }}
  {{- end }}
  labels:
    app.kubernetes.io/name: {{ .Values.graylog.securityResources.name }}
    app.kubernetes.io/component: graylog
    app.kubernetes.io/part-of: logging
  {{- if .Values.graylog.labels }}
    {{- toYaml .Values.graylog.labels | nindent 4 }}
  {{- end }}
spec:
  privileged: false
  # Required to prevent escalations to root.
  # allowPrivilegeEscalation: false
  # This is redundant with non-root + disallow privilege escalation,
  # but we can provide it for defense in depth.
  #requiredDropCapabilities:
  #  - ALL
  # Allow core volume types.
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  hostPorts:
    - min: 0
      max: 65535
  runAsUser:
    # Permits the container to run with root privileges as well.
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 0
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 0
        max: 65535
  readOnlyRootFilesystem: false
{{- end }}
{{- end }}
{{- end }}
{{- end }}
